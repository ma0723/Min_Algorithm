import sys
sys.stdin = open("2805.txt", "r")

T = int(input())
for tc in range(1, T+1):
    N = int(input())
    # 농장은 크기는 항상 홀수이다. (1 X 1, 3 X 3 … 49 X 49)
    price = [list(map(int, input())) for _ in range(N)]
    # 수확은 항상 농장의 크기에 딱 맞는 정사각형 마름모 형태
    # 3의 경우 1개의 블록 대각선까지 4방향 꼭지점에서 제외
    # 5의 경우 2개의 블록 대각선까지 4방향 꼭지점에서 제외
    # 7의 경우 3개의 블록 대각선까지 4방향 꼭지점에서 제외

    total = 0
    for i in price:
        for j in i:
            total += j
    # 농장의 크기 N와 농작물의 가치가 주어질 때, 규칙에 따라 얻을 수 있는 수익
    # 총 수익(total) - 각 꼭짓점의 대각선의 2//N개의 대각선 개수 (0, 0) (N-1, N-1) (N-1, 0) (0, N-1)
    # N=7 1행 1개(양쪽 3개 제외), 2행 3개(양쪽 2개 제외), 3행 5개(양쪽 1개 제외), 4행 7개(양쪽 0개 제외), 5행 5개

    s1 = 0
    # 수확하지 않는 윗쪽 반 부분의 행들의 합
    M = N//2
    for i in range(N//2):
    # 0, 1, 2행
        for j in range(M):
            s1 += price[i][j]
            # (0, 0) (0, 1) ... (0, N//2-1)
            # (1, 0) ... (1, N//2-2)
            # (2, N//2-3)
            # 행의 왼쪽
            s1 += price[i][N-1-j]
            # (0, N-1) (0, N-2) ... (0, N//2+1)
            # 행의 오른쪽
        M -= 1

    s2 = 0
    # 수확하지 않는 아래쪽 반 부분의 행들의 합
    M = N // 2
    for i in range(N-1, N//2, -1):
    # 6, 5, 4행
        for j in range(M):
            s2 += price[i][j]
            # (6, 0) (6, 1) ... (6, N//2-1)
            # (5, 0) ... (5, N//2-2)
            # (4, N//2-3)
            # 행의 왼쪽
            s2 += price[i][N - 1 - j]
            # (6, N-1) (6, N-2) ... (6, N//2+1)
            # 행의 오른쪽
        M -= 1

    result = total - s1 - s2
    print("#{} {}".format(tc, result))
